version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        image: laravel-app:latest
        container_name: laravel-app
        restart: always
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./docker/php/conf.d:/usr/local/etc/php/conf.d
        environment:
            - APP_ENV=${APP_ENV}
            - APP_DEBUG=${APP_DEBUG}
            - APP_KEY=${APP_KEY}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_DATABASE=${DB_DATABASE}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
        depends_on:
            - db
        networks:
            - app-network

    db:
        image: postgres:15
        container_name: laravel-db
        restart: always
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        ports:
            - "5433:5432"
        volumes:
            - db_data:/var/lib/postgresql/data
        networks:
            - app-network

    redis:
        image: redis:7.0
        container_name: laravel-redis
        restart: always
        ports:
            - "6379:6379"
        networks:
            - app-network

    nginx:
        image: nginx:latest
        container_name: laravel-nginx
        restart: always
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app-network

    postgresql:
        container_name: temporal-postgresql
        environment:
            POSTGRES_PASSWORD: temporal
            POSTGRES_USER: temporal
        image: postgres:${POSTGRESQL_VERSION}
        networks:
            - app-network
        ports:
            - 5432:5432
        volumes:
            - /var/lib/postgresql/data
    temporal:
        container_name: temporal
        depends_on:
            - postgresql
        environment:
            - DB=postgres12
            - DB_PORT=5432
            - POSTGRES_USER=temporal
            - POSTGRES_PWD=temporal
            - POSTGRES_SEEDS=postgresql
            - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
        image: temporalio/auto-setup:${TEMPORAL_VERSION}
        networks:
            - app-network
        ports:
            - 7233:7233
        volumes:
            - ./docker/dynamicconfig:/etc/temporal/config/dynamicconfig
    temporal-admin-tools:
        container_name: temporal-admin-tools
        depends_on:
            - temporal
        environment:
            - TEMPORAL_ADDRESS=temporal:7233
            - TEMPORAL_CLI_ADDRESS=temporal:7233
        image: temporalio/admin-tools:${TEMPORAL_ADMINTOOLS_VERSION}
        networks:
            - app-network
        stdin_open: true
        tty: true
    temporal-ui:
        container_name: temporal-ui
        depends_on:
            - temporal
        environment:
            - TEMPORAL_ADDRESS=temporal:7233
            - TEMPORAL_CORS_ORIGINS=http://localhost:3000
        image: temporalio/ui:${TEMPORAL_UI_VERSION}
        networks:
            - app-network
        ports:
            - 8080:8080

volumes:
    db_data:

networks:
    app-network:
        driver: bridge
